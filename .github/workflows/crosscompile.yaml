name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Create Build Directory
      run: mkdir -p build

    - name: Build Docker Image
      run: |
        docker buildx create --use
        docker buildx build --platform linux/arm64 \
          --cache-from=type=registry,ref=${{ secrets.DOCKER_USERNAME }}/rpi-cross-compiler:cache \
          --cache-to=type=registry,ref=${{ secrets.DOCKER_USERNAME }}/rpi-cross-compiler:cache,mode=max \
          -t ${{ secrets.DOCKER_USERNAME }}/rpi-cross-compiler:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/rpi-cross-compiler:latest

    - name: Run Cross-Compilation
      run: docker run --rm --platform linux/arm64 -v $(pwd):/workspace/build ${{ secrets.DOCKER_USERNAME }}/rpi-cross-compiler:latest

    - name: List Files in Workspace
      run: ls -l $(pwd)

    - name: List Files in Build Directory
      run: ls -l $(pwd)/build

    - name: Verify Build Output
      run: |
        if [ ! -f $(pwd)/build/InstrumentCluster ]; then
          echo "Build output not found!"
          exit 1
        fi

    - name: Install Google Cloud SDK
      run: |
        echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
        sudo apt-get install apt-transport-https ca-certificates -y
        curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
        sudo apt-get update && sudo apt-get install google-cloud-sdk -y

    - name: Upload Artifacts to Google Cloud Storage
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        GCS_BUCKET: carinstrument
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
      run: |
        echo "${{ secrets.GCP_SA_KEY }}" | base64 --decode > ${HOME}/gcp-key.json
        gcloud auth activate-service-account --key-file=${HOME}/gcp-key.json
        gsutil cp $(pwd)/build/InstrumentCluster gs://${{ secrets.GCS_BUCKET }}/InstrumentCluster
